# -*- coding: utf-8 -*-
"""my-wifes-algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10mkz_qIL24d8HmWgYzGq09gVfZ4vhNS5
"""

import pandas as pd

import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split

import pandas as pd

df = pd.read_csv ('2020_years_sales.csv')

df.head()



df['Unit Session Percentage - B2B'] = df['Unit Session Percentage - B2B'].str.replace('%', '').astype(float)

df['Unit Session Percentage'] = df['Unit Session Percentage'].str.replace('%', '').astype(float)

df['Sessions'] = df['Sessions'].str.replace(',', '').astype(float)

df['Buy Box Percentage']= df['Buy Box Percentage'].str.replace('%','').astype(float)

df['Orded Product Sales - B2B']=df['Ordered Product Sales - B2B'].str.replace('$', '').astype(float)

df['Ordred Product Sales']= df['Ordered Product Sales'].str.replace('$', '').astype(float)

df["Page Views"] = df["Page Views"].str.replace(',', '').astype(float)



df

x = df['Page Views'].values

df['Date'] = df['Date'].astype('datetime64[ns]')

df.head()

v = df["Sessions"].values

y = df['Ordred Product Sales'].values

import matplotlib.pyplot as plt
plt.figure(figsize=(20,8))
plt.plot(x)
plt.title('Page Views')

import matplotlib.pyplot as plt
plt.figure(figsize=(20,8))
plt.plot(y)
plt.title('Amazon Sales')

import numpy as np

x = x.reshape(-1, 1)

x_train = x

y = y.reshape(-1, 1)

y_train = y

v = v.reshape(-1, 1)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=4, random_state=4)

from sklearn.model_selection import train_test_split



from sklearn.preprocessing import PolynomialFeatures



from sklearn.model_selection import learning_curve



from sklearn.linear_model import LinearRegression

poly = PolynomialFeatures(degree=7, include_bias=False)

x_new = poly.fit_transform(x_train)

new_model = LinearRegression()

new_model.fit(x_new, y_train)

y_pred = new_model.predict(x_new)

plt.scatter(x, y)
plt.plot(x_new, y_pred)
plt.legend(['Predicted Line', 'Observed Line'])
plt.show()

print(new_model.predict(poly.fit_transform(y)))

c = (new_model.predict(poly.fit_transform(y)))

from sklearn.metrics import r2_score

r2_score(y, c)

from sklearn.metrics import explained_variance_score



make_scorer = explained_variance_score

make_scorer(y, c)







plt.figure(figsize=(26,14))
plt.plot(c,'g',label="Predicted Sales with 85% Metric Accuracy ")
plt.plot(y,'r',label="Last Years Sales")
plt.legend(loc="upper left")
plt.xlabel('Months')
plt.ylabel('Sales in Dollars')
plt.title('Predicted Sales and Last Years Sales')
plt.show()